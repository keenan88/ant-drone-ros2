<?xml version="1.0"?>
<robot name="linorobot2_mecanum" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:include filename="$(find linorobot2_description)/urdf/mecanum_properties.urdf.xacro" />
  <xacro:include filename="$(find linorobot2_description)/urdf/mech/base.urdf.xacro" />
  <xacro:include filename="$(find linorobot2_description)/urdf/mech/mecanum_wheel_left_fixed.urdf.xacro" />
  <xacro:include filename="$(find linorobot2_description)/urdf/mech/mecanum_wheel_right_fixed.urdf.xacro" />
  <!-- <xacro:include filename="$(find linorobot2_description)/urdf/sensors/imu.urdf.xacro" /> -->
  <!-- <xacro:include filename="$(find linorobot2_description)/urdf/sensors/generic_laser.urdf.xacro" /> -->
  <!-- <xacro:include filename="$(find linorobot2_description)/urdf/sensors/depth_sensor.urdf.xacro" /> -->
  <!-- <xacro:include filename="$(find linorobot2_description)/urdf/controllers/omni_drive.urdf.xacro" /> -->

  <xacro:include filename="$(find linorobot2_description)/urdf/mech/end_channel.urdf.xacro" />
  <xacro:include filename="$(find linorobot2_description)/urdf/mech/side_channel.urdf.xacro" />


  <gazebo>
    <plugin name="mecanum_wheel_mimic" filename="libgazebo_ros_planar_move.so">
      <ros>
        <remapping>odom:=odom/unfiltered</remapping>
      </ros>
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom/unfiltered</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <odometry_rate>20.0</odometry_rate>
      <robot_base_frame>base_footprint</robot_base_frame>
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
    </plugin>
  </gazebo>


  


  <xacro:base 
    length="${base_length}" 
    width="${base_width}" 
    height="${base_height}" 
    mass="${base_mass}"
    wheel_radius="${wheel_radius}"
    wheel_pos_z="${wheel_pos_z}"
  />

  <xacro:end_channel 
    end="front"
    pos_x="0.383345"
  />

  <xacro:end_channel 
    end="back"
    pos_x="-0.383345"
  />

  <xacro:side_channel 
    side="left"
    pos_y="0.23653"
  />

  <xacro:side_channel 
    side="right"
    pos_y="-0.23653"
  />

  <xacro:mecanum_wheel_left 
    side="left"
    end="front"
    radius="${wheel_radius}" 
    width="${wheel_width}" 
    pos_x="${wheel_pos_x}" 
    pos_y="${wheel_pos_y}" 
    pos_z="${wheel_pos_z}" 
    mass="${wheel_mass}"
  />

  <xacro:mecanum_wheel_right
    side="right"
    end="front"
    radius="${wheel_radius}" 
    width="${wheel_width}" 
    pos_x="${wheel_pos_x}" 
    pos_y="${-wheel_pos_y}" 
    pos_z="${wheel_pos_z}" 
    mass="${wheel_mass}"
  />

  <!-- Back wheels mechanum style swapped (left mecanum wheel goes on right side of robot, and vice versa) -->

  <xacro:mecanum_wheel_right 
    side="left"
    end="rear"
    radius="${wheel_radius}" 
    width="${wheel_width}" 
    pos_x="${-wheel_pos_x}" 
    pos_y="${wheel_pos_y}" 
    pos_z="${wheel_pos_z}" 
    mass="${wheel_mass}"
  />

  
  <xacro:mecanum_wheel_left 
    side="right"
    end="rear"
    radius="${wheel_radius}" 
    width="${wheel_width}" 
    pos_x="${-wheel_pos_x}" 
    pos_y="${-wheel_pos_y}" 
    pos_z="${wheel_pos_z}" 
    mass="${wheel_mass}"
  />

  <!-- IsaacSim will likely not respect joint angles for realsense joints -->
  <joint
    name="base_link_to_front_rs" type="fixed">
    <origin
      xyz="0.410335 0 0.0892"
      rpy="-1.57 1.57 0" />
    <parent link="base_link" />
    <child link="front_rs_depth_optical_frame" />
  </joint>

  <link name="front_rs_depth_optical_frame">
  </link>


  <link name="rear_rs_depth_optical_frame">
  </link>

  

  <!-- IsaacSim will likely not respect joint angles for realsense joints -->
  <joint
    name="base_link_to_rear_rs" type="fixed">
    <origin
      xyz="-0.41 0 0.089"
      rpy="-1.57 -1.57 0" />
    <parent link="base_link" />
    <child link="rear_rs_depth_optical_frame" />
  </joint>


  <link name="left_rs_depth_optical_frame">
  </link>

  <!-- IsaacSim will likely not respect joint angles for realsense joints -->
  <joint
    name="base_link_to_left_rs" type="fixed">
    <origin
      xyz="0 0.247 0.089"
      rpy="-1.57 0 0" />
    <parent link="base_link" />
    <child link="left_rs_depth_optical_frame" />
  </joint>

  <link name="right_rs_depth_optical_frame">
  </link>

  <!-- IsaacSim will likely not respect joint angles for realsense joints -->
  <joint
    name="base_link_to_right_rs" type="fixed">
    <origin
      xyz="0 -0.247 0.089"
      rpy="1.57 0 3.14" />
    <parent link="base_link" />
    <child link="right_rs_depth_optical_frame" />
  </joint>

  <gazebo reference="right_rs_depth_optical_frame">
    <sensor type="depth" name="camera1">
      <update_rate>30.0</update_rate>
      <depth_camera name="head">
        <horizontal_fov>2.96</horizontal_fov>
        <image>
          <width>480</width>
          <height>270</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>3</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </depth_camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>rrbot/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_rs_depth_optical_frame</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  

</robot>