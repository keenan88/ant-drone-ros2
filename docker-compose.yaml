services:

  antdrone_clearcore_uros_agent:
    image: microros/micro-ros-agent:humble
    container_name: antdrone0_clearcore_uros_agent
    stdin_open: true
    tty: true
    ports:
      - 8888:8888/udp 
    # environment:
      # - ROS_DOMAIN_ID=0
    command: udp4 --port 8888 --verbose 6
    # command: serial --dev /dev/ttyACM0 -v6 
    privileged: true
    network_mode: host
    restart: "no"
    ipc: host
    pid: host

  antdrone0_usbcam:
    container_name: antdrone0_usbcam
    build:
      context: .
      dockerfile: ./docker/usbcam.dockerfile
    environment:
      - DISPLAY=${DISPLAY}
    volumes:
      - ./antdrone_bringup:/home/humble_ws/src/antdrone_bringup:rw
      # - /dev:/dev
    network_mode: host
    privileged: true
    ipc: host
    pid: host

  # antdrone_espevb_uros_agent:
  #   image: microros/micro-ros-agent:humble
  #   container_name: antdrone0_espevb_uros_agent
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - 8888:8888/udp
  #   command: serial --dev /dev/ttyUSB0 -v2 
  #   privileged: true
  #   network_mode: host
  #   ipc: host
  #   pid: host

  # antdrone_realsense:
  #   container_name: antdrone0_realsense
  #   build:
  #     context: .
  #     dockerfile: ./docker/realsense.dockerfile
  #   # environment:
  #   #   - ROS_DOMAIN_ID=10
  #   volumes:
  #     - ./antdrone_bringup:/home/humble_ws/src/antdrone_bringup
  #     - ./antdrone_realsense:/home/humble_ws/src/antdrone_realsense
  #   privileged: True
  #   network_mode: host
  #   ipc: host
  #   pid: host
  #   command: ros2 launch antdrone_bringup realsense.launch.py

  # antdrone0_pcl:
  #   container_name: antdrone0_pcl
  #   build:
  #     context: .
  #     dockerfile: ./docker/pointcloud.dockerfile
  #   environment:
  #     - DRONE_NAME=${DRONE0_NAME}
  #     - USE_SIM_TIME=False
  #   volumes:
  #     - ./antdrone_pcl:/home/humble_ws/src/antdrone_pcl:rw
  #     - ./antdrone_bringup:/home/humble_ws/src/antdrone_bringup
  #   network_mode: host
  #   ipc: host
  #   pid: host

  
