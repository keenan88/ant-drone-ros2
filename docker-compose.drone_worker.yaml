services:

  linorobot2-gz:
    container_name: linorobot2-gz
    build:
      context: .
      dockerfile: docker/linorobot2/dockerfiles/gz.dockerfile
    stdin_open: true
    tty: true
    environment:
      - DISPLAY=${DISPLAY}
    env_file:
      - ./ros_domains.env
    volumes:
      - ./linorobot2_bringup:/home/humble_ws/src/linorobot2_bringup
      - ./linorobot2_description:/home/humble_ws/src/linorobot2_description
      - ./ant-worker-ros2/antworker_description:/home/humble_ws/src/antworker_description
      - ./ant-worker-ros2/antworker_gz:/home/humble_ws/src/antworker_gz
      - ./simulation/gazebo:/home/simulation/gazebo
      - ./simulation/models:/home/simulation/models
    working_dir: /home/humble_ws/
    network_mode: host
    command: sleep infinity
    ipc: host
    pid: host
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1 # alternatively, use `count: all` for all GPUs
              capabilities: [gpu]

  # linorobot2-nav:
  #   container_name: linorobot2-nav
  #   build:
  #     context: .
  #     dockerfile: docker/linorobot2/dockerfiles/nav.dockerfile
  #   stdin_open: true
  #   tty: true
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #     - ROS_DOMAIN_ID=${DRONE0_DOMAIN_ID}
  #     - WHEEL_ODOMETRY=false
  #   volumes:
  #     - ./linorobot2_navigation:/home/humble_ws/src/linorobot2_navigation
  #     - ./linorobot2_localization:/home/humble_ws/src/linorobot2_localization
  #     - ./yolo:/home/yolo
    
  #   # command: sleep infinity
  #   network_mode: host
  #   ipc: host
  #   pid: host

  

  # linorobot2-foxglove-bridge:
  #   container_name: linorobot2-foxglove-bridge
  #   build:
  #     context: .
  #     dockerfile: docker/linorobot2/dockerfiles/foxglove.dockerfile
  #   environment:
  #     - ROS_DOMAIN_ID=${DRONE0_DOMAIN_ID}
  #   stdin_open: true
  #   tty: true
  #   volumes:
  #     - /tmp/.X11-unix:/tmp/.X11-unix
  #   command: ros2 launch foxglove_bridge foxglove_bridge_launch.xml
  #   # command: sleep infinity
  #   network_mode: host
  #   ipc: host
  #   pid: host

  # linorobot2-joytick:
  #   container_name: linorobot2-joystick
  #   build:
  #     context: .
  #     dockerfile: ./docker/linorobot2/dockerfiles/joystick.dockerfile
  #   tty: true
  #   stdin_open: true
  #   env_file:
  #     - ./ros_domains.env
  #   environment:
  #     - WHEELED_MOTION=false
  #   volumes:
  #     - ./linorobot2_joystick:/home/humble_ws/src/linorobot2_joystick:rw
  #     - ./linorobot2_bringup:/home/humble_ws/src/linorobot2_bringup
  #   privileged: true
  #   network_mode: host
  #   ipc: host
  #   pid: host


    
  # linorobot2-pcl:
  #   container_name: linorobot2-pcl
  #   build:
  #     context: .
  #     dockerfile: ./docker/linorobot2/dockerfiles/pointcloud.dockerfile
  #   tty: true
  #   stdin_open: true
  #   environment:
  #     - USE_SIM=True
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - ROS_DOMAIN_ID=${DRONE0_DOMAIN_ID}
  #   volumes:
  #     - ./linorobot2_pcl:/home/humble_ws/src/linorobot2_pcl:rw
  #     - ./linorobot2_bringup:/home/humble_ws/src/linorobot2_bringup:rw
  #     - ./perception_pcl:/home/humble_ws/src/perception_pcl
  #   network_mode: host
  #   ipc: host
  #   pid: host
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             capabilities: [gpu]
  #   runtime: nvidia
    
  # antdrone_depth_to_laserscan:
  #   container_name: antdrone-depth-to-laserscan
  #   build:
  #     context: .
  #     dockerfile: docker/linorobot2/dockerfiles/depth_to_laserscan.Dockerfile
  #   network_mode: host
  #   volumes:
  #     - ./antdrone_depth_to_laserscan:/home/humble_ws/src/antdrone_depth_to_laserscan
  #   environment:
  #     - DISPLAY=${DISPLAY}
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - ROS_DOMAIN_ID=${DRONE0_DOMAIN_ID}
  #   stdin_open: true
  #   tty: true
  #   ipc: host
  #   pid: host
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             capabilities: [gpu]
  #   runtime: nvidia

