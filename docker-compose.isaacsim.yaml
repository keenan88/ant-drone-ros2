services:

  antdrone-isaacsim:
    build:
      context: .
      dockerfile: ./docker/isaacsim/dockerfiles/isaacsim.dockerfile
    container_name: linorobot2-isaacsim
    stdin_open: true
    tty: true
    environment:
      - ACCEPT_EULA=Y
      - PRIVACY_CONSENT=Y
      - USE_SIM_TIME=True
      - DISPLAY=$DISPLAY
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1 # alternatively, use `count: all` for all GPUs
              capabilities: [gpu]
    volumes:
      - ./docker/isaacsim/fastdds.xml:/root/.ros/fastdds.xml:rw
      - ~/docker/isaac-sim/cache/kit:/isaac-sim/kit/cache:rw
      - ~/docker/isaac-sim/cache/ov:/root/.cache/ov:rw
      - ~/docker/isaac-sim/cache/pip:/root/.cache/pip:rw
      - ~/docker/isaac-sim/cache/glcache:/root/.cache/nvidia/GLCache:rw
      - ~/docker/isaac-sim/cache/computecache:/root/.nv/ComputeCache:rw
      - ~/docker/isaac-sim/logs:/root/.nvidia-omniverse/logs:rw
      - ~/docker/isaac-sim/data:/root/.local/share/ov/data:rw
      - ~/docker/isaac-sim/documents:/root/Documents:rw
      - ./linorobot2_description:/isaac-sim/humble_ws/src/linorobot2_description
      - ./simulation/isaacsim:/isaac-sim/humble_ws/src/antworker_isaacsim_world:rw
      - ./docker/isaacsim/entry_scripts/isaacsim_entrypoint.sh:/isaacsim_entrypoint.sh:rwx
      - /tmp/.X11-unix:/tmp/.X11-unix
    restart: "no"
    network_mode: host
    # entrypoint: ""
    # command: sleep infinity

  # antdrone-usd-editor:
  #   build:
  #     context: .
  #     dockerfile: ./docker/isaacsim/dockerfiles/omniverse.dockerfile 
  #   container_name: antdrone-usd-editor
  #   stdin_open: true 
  #   tty: true
  #   volumes:
  #     - ./simulation/isaacsim:/workspace/isaacsim:rw
  #     - ./simulation/omniverse_sdk:/workspace/omniverse_sdk:rw
  #     # - ~/.nvidia-omniverse:/home/ubuntu/.nvidia-omniverse:rw
  #     # - ~/.local:/home/ubuntu/.local:rw
  #     # - ~/.cache:/home/ubuntu/.cache:rw
  #   environment:
  #     - ACCEPT_EULA=Y
  #     - NVIDIA_VISIBLE_DEVICES=all
  #     - NVIDIA_DRIVER_CAPABILITIES=all
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]
  #   runtime: nvidia
  #   restart: "no"
  #   entrypoint: ""
  #   network_mode: host
  #   command: sleep infinity



