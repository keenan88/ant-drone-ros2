<?xml version="1.0"?>

  <!-- The image frame from gazebo does NOT match the output frame of physical cameras -->
  <!-- Physical cameras have: z out the front, x out the right, y down -->
  <!-- Gazebo cameras have: x out the front, y out the left, z up -->
  <!-- Since we need the physical frame for physical & sim robots to match frames, 
        define a transform from the physical to real frame that will put the gazebo 
        camera in the correct position to mimic a real camera -->

<robot name="antdrone_camera" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="rs" params="drone_name camera_name x y z roll pitch yaw">

    <gazebo reference="${camera_name}_gazebo_camera_frame">

      <sensor type="depth" name="${camera_name}">
        <update_rate>15.0</update_rate> <!-- Gazebo does not necessarily respect this update rate when publishing the camera data to ros2 -->
        
        <camera>
          <horizontal_fov>1.51</horizontal_fov> <!-- Set horizontal FOV to realsense d435i horizontal color FOV (69 degrees)-->
          <!-- There is not a control for vertical FOV, it is set automatically as height / width * horizontal_fov -->
          <image>
            <width>100</width>
            <height>56</height> <!-- Set pixel height so that vertical FOV matches realsense d435i -->
            <format>R8G8B8</format>
          </image>
          <clip>
            <!-- Physical realsense cuts off around 10cm, sim camera seems to cutoff at 30cm no matter what. -->
            <near>0.1</near>
            <!--  Be sure to set far clip greater than cropbox node's cutoff distance.
              The camera generates a grey plane at this distance that will be interpreted in nav2 as an obstacle-->
            <far>5</far> 
          </clip>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>


        <plugin name="${camera_name}_camera_controller" filename="libgazebo_ros_camera.so">
          <ros>
              <namespace>${drone_name}</namespace>
          </ros>
        
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>${camera_name}_camera</cameraName>
          <pointsTopicName>points</pointsTopicName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>${camera_name}_gazebo_camera_frame</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
        </plugin>
      </sensor>
    </gazebo>


    

    <link name="${camera_name}_depth_optical_frame">
    </link>

    <joint
      name="base_link_to_${camera_name}" type="fixed">
      <origin
        xyz="${x} ${y} ${z}"
        rpy="${roll} ${pitch} ${yaw}" />
      <parent link="base_link" />
      <child link="${camera_name}_depth_optical_frame" />
    </joint>

    <link name="${camera_name}_gazebo_camera_frame">
    </link>

    <joint
      name="${camera_name}_depth_optical_frame_to_${camera_name}_gazebo_camera_frame" type="fixed">
      <origin
        xyz="0 0 0"
        rpy="1.57 -1.57 0" />
      <parent link="${camera_name}_depth_optical_frame" />
      <child link="${camera_name}_gazebo_camera_frame" />
    </joint>

  </xacro:macro>
</robot>